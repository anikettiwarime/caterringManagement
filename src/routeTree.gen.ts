/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import {createFileRoute} from '@tanstack/react-router';

// Import Routes

import {Route as rootRoute} from './routes/__root';
import {Route as AuthImport} from './routes/_auth';
import {Route as AppImport} from './routes/_app';
import {Route as IndexImport} from './routes/index';
import {Route as AuthSignupImport} from './routes/_auth/signup';
import {Route as AuthSigninImport} from './routes/_auth/signin';
import {Route as AppDashboardImport} from './routes/_app/dashboard';
import {Route as AppUsersStaffImport} from './routes/_app/users/staff';
import {Route as AppUsersMaharajImport} from './routes/_app/users/maharaj';
import {Route as AppUsersClientImport} from './routes/_app/users/client';
import {Route as AppUsersCaterorImport} from './routes/_app/users/cateror';

// Create Virtual Routes

const AppUsersDishLazyImport = createFileRoute('/_app/users/dish')();

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any);

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

const AuthSignupRoute = AuthSignupImport.update({
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any);

const AuthSigninRoute = AuthSigninImport.update({
  path: '/signin',
  getParentRoute: () => AuthRoute,
} as any);

const AppDashboardRoute = AppDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any);

const AppUsersDishLazyRoute = AppUsersDishLazyImport.update({
  path: '/users/dish',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/users/dish.lazy').then((d) => d.Route),
);

const AppUsersStaffRoute = AppUsersStaffImport.update({
  path: '/users/staff',
  getParentRoute: () => AppRoute,
} as any);

const AppUsersMaharajRoute = AppUsersMaharajImport.update({
  path: '/users/maharaj',
  getParentRoute: () => AppRoute,
} as any);

const AppUsersClientRoute = AppUsersClientImport.update({
  path: '/users/client',
  getParentRoute: () => AppRoute,
} as any);

const AppUsersCaterorRoute = AppUsersCaterorImport.update({
  path: '/users/cateror',
  getParentRoute: () => AppRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/_app': {
      id: '/_app';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof AppImport;
      parentRoute: typeof rootRoute;
    };
    '/_auth': {
      id: '/_auth';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof AuthImport;
      parentRoute: typeof rootRoute;
    };
    '/_app/dashboard': {
      id: '/_app/dashboard';
      path: '/dashboard';
      fullPath: '/dashboard';
      preLoaderRoute: typeof AppDashboardImport;
      parentRoute: typeof AppImport;
    };
    '/_auth/signin': {
      id: '/_auth/signin';
      path: '/signin';
      fullPath: '/signin';
      preLoaderRoute: typeof AuthSigninImport;
      parentRoute: typeof AuthImport;
    };
    '/_auth/signup': {
      id: '/_auth/signup';
      path: '/signup';
      fullPath: '/signup';
      preLoaderRoute: typeof AuthSignupImport;
      parentRoute: typeof AuthImport;
    };
    '/_app/users/cateror': {
      id: '/_app/users/cateror';
      path: '/users/cateror';
      fullPath: '/users/cateror';
      preLoaderRoute: typeof AppUsersCaterorImport;
      parentRoute: typeof AppImport;
    };
    '/_app/users/client': {
      id: '/_app/users/client';
      path: '/users/client';
      fullPath: '/users/client';
      preLoaderRoute: typeof AppUsersClientImport;
      parentRoute: typeof AppImport;
    };
    '/_app/users/maharaj': {
      id: '/_app/users/maharaj';
      path: '/users/maharaj';
      fullPath: '/users/maharaj';
      preLoaderRoute: typeof AppUsersMaharajImport;
      parentRoute: typeof AppImport;
    };
    '/_app/users/staff': {
      id: '/_app/users/staff';
      path: '/users/staff';
      fullPath: '/users/staff';
      preLoaderRoute: typeof AppUsersStaffImport;
      parentRoute: typeof AppImport;
    };
    '/_app/users/dish': {
      id: '/_app/users/dish';
      path: '/users/dish';
      fullPath: '/users/dish';
      preLoaderRoute: typeof AppUsersDishLazyImport;
      parentRoute: typeof AppImport;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AppRoute: AppRoute.addChildren({
    AppDashboardRoute,
    AppUsersCaterorRoute,
    AppUsersClientRoute,
    AppUsersMaharajRoute,
    AppUsersStaffRoute,
    AppUsersDishLazyRoute,
  }),
  AuthRoute: AuthRoute.addChildren({AuthSigninRoute, AuthSignupRoute}),
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/_auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/dashboard",
        "/_app/users/cateror",
        "/_app/users/client",
        "/_app/users/maharaj",
        "/_app/users/staff",
        "/_app/users/dish"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/signin",
        "/_auth/signup"
      ]
    },
    "/_app/dashboard": {
      "filePath": "_app/dashboard.tsx",
      "parent": "/_app"
    },
    "/_auth/signin": {
      "filePath": "_auth/signin.tsx",
      "parent": "/_auth"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx",
      "parent": "/_auth"
    },
    "/_app/users/cateror": {
      "filePath": "_app/users/cateror.tsx",
      "parent": "/_app"
    },
    "/_app/users/client": {
      "filePath": "_app/users/client.tsx",
      "parent": "/_app"
    },
    "/_app/users/maharaj": {
      "filePath": "_app/users/maharaj.tsx",
      "parent": "/_app"
    },
    "/_app/users/staff": {
      "filePath": "_app/users/staff.tsx",
      "parent": "/_app"
    },
    "/_app/users/dish": {
      "filePath": "_app/users/dish.lazy.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
